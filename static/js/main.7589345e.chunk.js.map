{"version":3,"sources":["logo.svg","background.jpg","no_artwork.png","Components/Welcome.js","Components/SearchForm.js","Hooks.js","Components/ResultItem.js","Components/Search.js","Components/ShowSelected.js","Components/Home.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Welcome","className","src","background","alt","style","width","logo","id","onClick","props","history","push","React","Component","SearchForm","state","value","handleChange","bind","handleSubmit","event","this","setState","target","preventDefault","setSearchQuery","clearSelectedResult","onSubmit","type","onChange","placeholder","useFetch","url","initialValue","useState","result","setResult","useEffect","fetch","then","response","json","ResultItem","MovieData","viewResult","Title","Search","query","results","Response","Error","map","ShowSelected","search","movie","imdbID","Poster","poster","Year","Plot","Genre","Rated","Runtime","imdbRating","Director","Actors","Home","selected_result","search_query","localStorage","setItem","JSON","stringify","getItem","selected","parse","current_query","About","withRouter","path","exact","component","routerProps","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7589345e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fffe9955.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.0a390081.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no_artwork.6e7204d9.png\";","import React from 'react';\nimport './Welcome.css';\nimport background from '../background.jpg'\nimport logo from '../logo.svg'\n\nclass Welcome extends React.Component {\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <img src={background} alt=\"Snow\" style={{width: \"100%\"}}></img>\n                <div className=\"centered\">\n                <h1>Welcome!</h1>\n                <img className=\"logo\" src={logo} alt=\"plan.com logo\"/>\n                <p>This is Will Bush's submission for the coding challenge skill assessment for a Front-end Developer role at plan.com</p>\n                <button id=\"about\" onClick={() => this.props.history.push('/home')}>TRY THE APP</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Welcome;","import React from 'react';\nimport './SearchForm.css'\n\nclass SearchForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.setSearchQuery(this.state.value);\n        this.props.clearSelectedResult();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit} className=\"searchForm\">\n          <label>\n            <strong>Search: </strong>\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"Please enter a movie title\"/>\n          </label>\n          <input type=\"submit\" value=\"Submit\" id=\"submit\"/>\n        </form>\n      );\n    }\n  }\n\n  export default SearchForm;","import { useState, useEffect } from \"react\";\n\nexport const useFetch = (url, initialValue) => {\n    const [result, setResult] = useState(initialValue);\n\n    useEffect(() => {\n        fetch(url)\n        .then(response => response.json())\n        .then(json => setResult(json));\n    }, [ url ]);\n\n    return result;\n}","import React from \"react\";\n\nfunction ResultItem({ MovieData, viewResult}) {\n    return (\n        <div className=\"resultListItem\" onClick={() => viewResult(MovieData)}>\n            <h3>{MovieData.Title}</h3>\n        </div>\n    );\n};\n\nexport default ResultItem;\n\n","import React from \"react\";\nimport { useFetch } from \"../Hooks\";\nimport ResultItem from \"./ResultItem\";\n\nfunction Search ({ viewResult, query }) {\n  let search = \"http://www.omdbapi.com/?apikey=a12b58ca&type=movie&s=\" + query\n  let results = useFetch(search, {});\n\n  return (\n    <div>\n        <h3>Results:</h3>\n        {results.Response === \"False\" ? <p>{results.Error} Please try again with a different search term.</p> : null}\n        {results.Search ? results.Search.map(result => <ResultItem MovieData={result} viewResult={viewResult}><h3>{result.Title}</h3></ResultItem>) : null}\n    </div>\n  );\n};\nexport default Search;","import React from 'react';\nimport { useFetch } from \"../Hooks\";\nimport poster from '../no_artwork.png'\n\nfunction ShowSelected ({movie}) {\nlet search = \"http://www.omdbapi.com/?apikey=a12b58ca&i=\" + movie.imdbID\nlet result = useFetch(search, {})\n\n\n        return (\n            <div className=\"selected\">\n                {result.Poster === \"N/A\" ? <img className=\"poster\" src={poster} alt={result.Title}/> : <img className=\"poster\" src={result.Poster} alt={result.Title}/>}  \n                <h1>{result.Title} ({result.Year})</h1>\n                <h3>{result.Plot}</h3>\n                <p><strong>{result.Genre}</strong></p>\n                <p><strong>Rated: </strong>{result.Rated}</p>\n                <p><strong>Runtime: </strong>{result.Runtime}</p>\n                <p><strong>IMDB Rating: </strong>{result.imdbRating}</p>\n                <p><strong>Director: </strong>{result.Director}</p>\n                <p><strong>Starring: </strong>{result.Actors}</p>\n            </div>\n        )\n    }\n\nexport default ShowSelected;\n","import React from 'react';\nimport './Home.css'\nimport logo from '../logo.svg'\nimport SearchForm from './SearchForm'\nimport Search from './Search';\nimport ShowSelected from './ShowSelected';\n\nclass Home extends React.Component {\n\n    state = {\n        selected_result: null,\n        search_query: \"\"\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('selected_result')) {\n            let selected = localStorage.getItem('selected_result')\n            this.setState({\n                selected_result: JSON.parse(selected)\n            })\n        }\n        if (localStorage.getItem('search_query')) {\n            let current_query = localStorage.getItem('search_query')\n            this.setState({\n                search_query: JSON.parse(current_query)\n            })\n        }\n    }\n\n    // A FUNCTION THAT SETS THE SELECTED RESULT IN THE DETAIL VIEW\n    viewResult = (result) => {\n        this.setState({\n            selected_result: result\n        })\n        localStorage.setItem('selected_result', JSON.stringify(result));\n    }\n\n    // A FUNCTION THAT SAVES THE SEARCH INPUT TERM IN STATE\n    setSearchQuery = (query) => {\n        this.setState({\n            search_query: query\n        })\n        localStorage.setItem('search_query', JSON.stringify(query));\n    }\n\n    clearSelectedResult = () => {\n        localStorage.setItem('selected_result', null);\n        this.setState({\n            selected_result: null\n        })\n    }\n\n    render() {\n\n        return (\n            <div className=\"home\">\n                <header>\n                    <img className=\"logo\" src={logo} alt=\"plan.com logo\"/>\n                    <SearchForm search={this.search} setSearchQuery={this.setSearchQuery} clearSelectedResult={this.clearSelectedResult}/>\n                </header>\n                <aside>\n                    {this.state.search_query !== \"\" ? <Search query={this.state.search_query} viewResult={this.viewResult}/> : null}\n                </aside>\n                <main>\n                    {this.state.selected_result ? <ShowSelected movie={this.state.selected_result} ></ShowSelected> : <p>Please perform a search and select a movie from the results list.</p>}\n                </main>\n                <footer>\n                <button id=\"about\" onClick={() => this.props.history.push('/about')}>ABOUT</button>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport logo from '../logo.svg'\nimport './About.css';\n\nclass About extends React.Component {\n\n    render() {\n\n        return (\n            <div className=\"about\">\n                <header>\n                    <img className=\"logo\" src={logo} alt=\"plan.com logo\" onClick={() => this.props.history.push('/home')}/>\n                </header>\n                <main className=\"about\">\n                    <h1>About this project</h1>\n                    <p><strong>Overview: </strong><br/>Write a CRA (create-react-app) application that allows searching movies from https://www.omdbapi.com/ and list results and then clicking on a film to show more details.</p>\n                    <p><strong>Data fetching Hook: </strong><br/>Use a custom useFetch hook to fetch data from the omdbapi. The API of the hook is up to you (parameters of the hook, and shape of the object returned by the hook), but all the data must come from it.</p>\n                    <p><strong>Navigation: </strong><br/>The application must use react-router or reach router.</p>\n                    <p><strong>Detailed view: </strong><br/>Clicking on a movie in the list of search results should show a detailed view of the movie on the right hand side of the page.</p>\n                    <p><strong>Other things we are looking for: </strong></p>\n                    <ul>\n                        <li>The use of hooks and logic used to write the custom hook.</li>\n                        <li>A page refresh should display the same page (same list, same detailed movie)</li>\n                        <li>Routing - how the page renders when you click a link/search or refresh</li>\n                        <li>Forms - how data is handled from the input fields and then used to load data.</li>\n                        <li>Error handling - Handle input errors and error responses from the api.</li>\n                    </ul>\n                </main>\n                <footer>\n                <button id=\"about\" onClick={() => this.props.history.push('/home')}>HOME</button>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\nimport './App.css';\nimport { Route, withRouter, Switch } from 'react-router-dom'\nimport Welcome from './Components/Welcome'\nimport Home from './Components/Home'\nimport About from './Components/About'\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route\n          path='/' exact\n          component={routerProps => (\n              <Welcome {...routerProps} />\n            )}\n        />\n        <Route\n          path='/home'\n          component={routerProps => (\n              <Home {...routerProps} />\n            )}\n        />\n        <Route\n          path='/about'\n          component={routerProps => (\n              <About {...routerProps} />\n            )}\n        />\n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}